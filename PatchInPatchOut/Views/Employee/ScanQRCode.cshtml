@{
    ViewData["Title"] = "Scan QR Code";
}

<div class="mt-4 container text-center">
    <h2>Scan QR Code</h2>
    <p>Click the button below to open the camera and scan the QR Code.</p>

    <button id="scanBtn" class="btn btn-primary">Scan QR Code</button>
    <button id="closeBtn" class="btn btn-danger d-none">Close Camera</button>

    <video id="video" class="d-none" width="100%" autoplay></video>
    <canvas id="canvas" class="d-none"></canvas>

    <div id="result" class="mt-3"></div>
</div>

<script src="https://rawcdn.githack.com/cozmo/jsQR/master/dist/jsQR.js"></script>
<script>
    let video = document.getElementById("video");
    let canvas = document.getElementById("canvas");
    let context = canvas.getContext("2d");
    let scanBtn = document.getElementById("scanBtn");
    let closeBtn = document.getElementById("closeBtn");
    let stream = null;
    let scanning = false; //  Added flag to track scanning state

    //  When Scan Button is Clicked
    scanBtn.addEventListener("click", function () {
        video.classList.remove("d-none");
        closeBtn.classList.remove("d-none");
        scanBtn.classList.add("d-none");

        navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } })
            .then(mediaStream => {
                stream = mediaStream;
                video.srcObject = stream;
                video.play();
                scanning = true;
                requestAnimationFrame(scanQRCode); // Start scanning properly
            })
            .catch(err => {
                alert("Camera access denied!");
                resetUI();
            });
    });

    //  Close Camera Button
    closeBtn.addEventListener("click", function () {
        stopCamera();
    });

    function scanQRCode() {
        if (!scanning) return;

        if (video.readyState === video.HAVE_ENOUGH_DATA) {
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            let imageData = context.getImageData(0, 0, canvas.width, canvas.height);
            let code = jsQR(imageData.data, imageData.width, imageData.height);

            if (code) {
                scanning = false; //  Stop further scanning
                stopCamera();
                sendQRCodeToServer(code.data);
            }
        }
        requestAnimationFrame(scanQRCode); // Keep scanning until QR is detected
    }

    function stopCamera() {
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
            stream = null;
        }
        scanning = false;
        resetUI();
    }

    function resetUI() {
        video.classList.add("d-none");
        closeBtn.classList.add("d-none");
        scanBtn.classList.remove("d-none");
    }

    function sendQRCodeToServer(qrCodeData) {
        fetch("/Employee/ProcessQRCode", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ scannedQRCode: qrCodeData })
        })
        .then(response => response.json())
        .then(data => {
            document.getElementById("result").innerHTML = `<div class="alert ${data.success ? 'alert-success' : 'alert-danger'}">${data.message}</div>`;
        })
        .catch(error => {
            document.getElementById("result").innerHTML = `<div class="alert alert-danger">Error processing QR code.</div>`;
        });
    }
</script>
